{"version":3,"sources":["api/users.ts","components/UserInfo/UserInfo.tsx","components/TodoInfo/TodoInfo.tsx","components/TodoList/TodoList.tsx","App.tsx","api/todos.ts","index.tsx"],"names":["id","name","username","email","UserInfo","user","className","href","TodoInfo","todo","title","completed","classNames","TodoList","todos","map","getUser","userId","usersFromServer","find","App","useState","setTitle","setUserId","falseTitle","setFalseTitle","falseUserId","setFalseUserId","action","method","onSubmit","event","preventDefault","Math","max","push","htmlFor","type","placeholder","value","onChange","target","Number","disabled","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.31c6b810.chunk.js","sourcesContent":["export default [\n  {\n    id: 1,\n    name: 'Leanne Graham',\n    username: 'Bret',\n    email: 'Sincere@april.biz',\n  },\n  {\n    id: 2,\n    name: 'Ervin Howell',\n    username: 'Antonette',\n    email: 'Shanna@melissa.tv',\n  },\n  {\n    id: 3,\n    name: 'Clementine Bauch',\n    username: 'Samantha',\n    email: 'Nathan@yesenia.net',\n  },\n  {\n    id: 4,\n    name: 'Patricia Lebsack',\n    username: 'Karianne',\n    email: 'Julianne.OConner@kory.org',\n  },\n  {\n    id: 5,\n    name: 'Chelsey Dietrich',\n    username: 'Kamren',\n    email: 'Lucio_Hettinger@annie.ca',\n  },\n  {\n    id: 6,\n    name: 'Mrs. Dennis Schulist',\n    username: 'Leopoldo_Corkery',\n    email: 'Karley_Dach@jasper.info',\n  },\n  {\n    id: 7,\n    name: 'Kurtis Weissnat',\n    username: 'Elwyn.Skiles',\n    email: 'Telly.Hoeger@billy.biz',\n  },\n  {\n    id: 8,\n    name: 'Nicholas Runolfsdottir V',\n    username: 'Maxime_Nienow',\n    email: 'Sherwood@rosamond.me',\n  },\n  {\n    id: 9,\n    name: 'Glenna Reichert',\n    username: 'Delphine',\n    email: 'Chaim_McDermott@dana.io',\n  },\n  {\n    id: 10,\n    name: 'Clementina DuBuque',\n    username: 'Moriah.Stanton',\n    email: 'Rey.Padberg@karina.biz',\n  },\n];\n","import React from 'react';\nimport { User } from '../../types/User';\n\ntype Props = {\n  user: User;\n};\n\nexport const UserInfo: React.FC<Props> = ({ user }) => {\n  const { name, email } = user;\n\n  return (\n    <a className=\"UserInfo\" href={`mailto:${email}`}>\n      {name}\n    </a>\n  );\n};\n","import React from 'react';\nimport classNames from 'classnames';\nimport { Todo } from '../../types/Todo';\nimport { UserInfo } from '../UserInfo';\n\ntype Props = {\n  todo: Todo;\n};\n\nexport const TodoInfo: React.FC<Props> = ({ todo }) => {\n  const {\n    title, completed, user, id,\n  } = todo;\n\n  return (\n    <article\n      data-id={id}\n      className={classNames('TodoInfo', { 'TodoInfo--completed': completed })}\n    >\n      <h2 className=\"TodoInfo__title\">{title}</h2>\n      {user && <UserInfo user={user} />}\n    </article>\n  );\n};\n","import React from 'react';\nimport { TodoInfo } from '../TodoInfo';\nimport { Todo } from '../../types/Todo';\n\ntype Props = {\n  todos: Todo[];\n};\n\nexport const TodoList: React.FC<Props> = ({ todos }) => {\n  return (\n    <section className=\"TodoList\">\n      {todos.map(todo => (\n        <TodoInfo key={todo.id} todo={todo} />\n      ))}\n    </section>\n  );\n};\n","import React, { useState } from 'react';\nimport './App.scss';\n\nimport usersFromServer from './api/users';\nimport todosFromServer from './api/todos';\n\nimport { User } from './types/User';\nimport { Todo } from './types/Todo';\nimport { TodoList } from './components/TodoList';\n\nfunction getUser(userId: number): User | null {\n  const foundUser = usersFromServer.find((user) => user.id === userId);\n\n  return foundUser || null;\n}\n\nconst todos: Todo[] = todosFromServer.map((todo) => ({\n  ...todo,\n  user: getUser(todo.userId),\n}));\n\nexport const App: React.FC = () => {\n  const [title, setTitle] = useState('');\n  const [userId, setUserId] = useState(0);\n  const [falseTitle, setFalseTitle] = useState(false);\n  const [falseUserId, setFalseUserId] = useState(false);\n\n  const handleSubmit = (event: React.FormEvent) => {\n    event.preventDefault();\n\n    if (userId === 0 || title === '') {\n      setFalseTitle(title === '');\n      setFalseUserId(userId === 0);\n\n      return;\n    }\n\n    const todo: Todo = {\n      id: Math.max(...todos.map(({ id }) => id)) + 1,\n      title,\n      userId,\n      completed: false,\n      user: getUser(userId),\n    };\n\n    todos.push(todo);\n\n    setTitle('');\n    setUserId(0);\n  };\n\n  const handleTitle = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setTitle(event.target.value);\n    setFalseTitle(false);\n  };\n\n  const handleUser = (event: React.ChangeEvent<HTMLSelectElement>) => {\n    setUserId(Number(event.target.value));\n    setFalseUserId(false);\n  };\n\n  return (\n    <div className=\"App\">\n      <h1>Add todo form</h1>\n\n      <form action=\"/api/users\" method=\"POST\" onSubmit={handleSubmit}>\n        <div className=\"field\">\n          <label htmlFor=\"title\"> Title: </label>\n          <input\n            type=\"text\"\n            id=\"title\"\n            name=\"title\"\n            data-cy=\"titleInput\"\n            placeholder=\"Enter a title\"\n            value={title}\n            onChange={handleTitle}\n          />\n          {falseTitle && <span className=\"error\">Please enter a title</span>}\n        </div>\n\n        <div className=\"field\">\n          <label htmlFor=\"user\"> User: </label>\n          <select\n            id=\"user\"\n            name=\"user\"\n            data-cy=\"userSelect\"\n            value={userId}\n            onChange={handleUser}\n          >\n            <option value=\"0\" disabled>\n              Choose a user\n            </option>\n            {usersFromServer.map(({ id, name }) => (\n              <option value={id}>{name}</option>\n            ))}\n          </select>\n          {falseUserId && <span className=\"error\">Please choose a user</span>}\n        </div>\n\n        <button type=\"submit\" data-cy=\"submitButton\">\n          Add\n        </button>\n      </form>\n\n      <TodoList todos={todos} />\n    </div>\n  );\n};\n","export default [\n  {\n    id: 1,\n    title: 'delectus aut autem',\n    completed: true,\n    userId: 1,\n  },\n  {\n    id: 15,\n    title: 'some other todo',\n    completed: false,\n    userId: 1,\n  },\n  {\n    id: 2,\n    title: 'quis ut nam facilis et officia qui',\n    completed: false,\n    userId: 4,\n  },\n];\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}